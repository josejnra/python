[tool.poetry]
name = "python snippets"
version = "0.1.0"
description = ""
authors = ["Jos√© Nunes <josenunesra@gmail.com>"]

[tool.poetry.dependencies]
python = "3.12.*"
bokeh = "^3.2.0"
# dependency-injector = "^4.41.0"
folium = "^0.14.0"
matplotlib = "^3.7.2"
pydataset = "^0.2.0"
pymongo = "^4.4.1"
scikit-learn = "^1.3.0"
seaborn = "^0.12.2"
dask = "^2023.7.0"
fastparquet = "^2023.7.0"
line-profiler = "^4.1.1"
pycallgraph2 = "^1.1.3"
memray = "^1.9.1"
uvicorn = "^0.24.0.post1"
httpx = {extras = ["http2"], version = "^0.25.2"}
aiohttp = "^3.9.0"
fastapi = "^0.115.7"
duckdb = "^0.10.0"
pyarrow = "^15.0.0"
polars = "^0.20.8"
loguru = "^0.7.2"

[tool.poetry.group.dev.dependencies]
mypy = "^0.960"
taskipy = "^1.13.0"
pytest = "^8.3.2"
pytest-mock = "^3.14.0"
pytest-cov = "^5.0.0"
ruff = "^0.6.1"

[tool.ruff]
line-length = 88
extend-exclude = ["migrations"]
cache-dir = "/tmp/.ruff_cache"
exclude = []

[tool.ruff.lint]
preview = true
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
    "PL",  # pylint
    "PT",  # flake8-pytest-style
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.mypy]
exclude = []
cache_dir = "/tmp/.mypy_cache"

[tool.taskipy.tasks]
lint = 'ruff check . && ruff check . --diff'
format = 'ruff check . --fix && ruff format .'
pre_test = "task lint"
test = "pytest --cov --cov-branch --cov-fail-under=75 --cov-report term --cov-report xml:coverage.xml"
post_test = "coverage html && mypy ."

[tool.pytest.ini_options]
cache_dir = "/tmp/.pytest_cache"
addopts = "-s -x -vv"
testpaths = [
    "tests"
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
